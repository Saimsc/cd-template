name: CICD TEMPLATE VER1.5

on:
  workflow_call:
    inputs:
      build_code:      { type: string, required: true }
      build_docker:    { type: string, required: true }
      codeql:          { type: string, required: true }
      deploy:          { type: string, required: true }

      application_name:{ type: string, required: false, default: "app" }
      image_tag:       { type: string, required: true }

      # Helm
      release_name:    { type: string, required: true }
      chart_path:      { type: string, required: true }   # path to Helm chart dir
      values_file:     { type: string, required: true }   # path to main repoâ€™s values.yaml

      codeql_languages:{ type: string, required: false, default: "java" }

permissions:
  contents: read
  security-events: write

jobs:
  build:
    if: ${{ inputs.build_code == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'
      - run: mvn -B -ntp -DskipTests package

  docker:
    if: ${{ inputs.build_docker == 'true' }}
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Build Docker image (local only)
        env:
          IMAGE_TAG: ${{ inputs.image_tag }}
          APP_NAME:  ${{ inputs.application_name }}
        run: |
          IMAGE="$APP_NAME:$IMAGE_TAG"
          echo "Building local Docker image: $IMAGE"
          docker build -t "$IMAGE" .
          kind_image=$IMAGE
          echo "image_full=$kind_image" >> $GITHUB_OUTPUT

  codeql-scan:
    if: ${{ inputs.codeql == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: github/codeql-action/init@v3
        with:
          languages: ${{ inputs.codeql_languages }}
      - uses: github/codeql-action/autobuild@v3
      - uses: github/codeql-action/analyze@v3
        with:
          category: "/language:${{ inputs.codeql_languages }}"

  deploy:
    if: ${{ inputs.deploy == 'true' }}
    needs: [docker]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install KinD
        uses: helm/kind-action@v1
        with:
          version: v0.22.0
          cluster_name: cicd-kind

      - name: Load local image into KinD
        run: |
          IMAGE="${{ needs.docker.outputs.image_full }}"
          kind load docker-image "$IMAGE" --name cicd-kind

      - name: Set up Helm
        uses: azure/setup-helm@v4
        with:
          version: v3.14.4

      - name: Replace chart values.yaml with main repo values
        run: |
          cp "${{ inputs.values_file }}" "${{ inputs.chart_path }}/values.yaml"

      - name: Helm upgrade/install into KinD
        run: |
          helm upgrade --install "${{ inputs.release_name }}" "${{ inputs.chart_path }}" \
            --namespace "default" --create-namespace

      - name: Verify pods
        run: kubectl get pods -A
