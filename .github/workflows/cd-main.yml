name: Reusable CI/CD

on:
  workflow_call:
    inputs:
      build_code:
        required: true
        type: string
      build_docker:
        required: true
        type: string
      codeql:
        required: true
        type: string
      deploy:
        required: true
        type: string
      image_tag:
        required: true
        type: string

jobs:
  build-code:
    if: ${{ inputs.build_code == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17

      - name: Build Code
        run: |
          echo "Building Java application..."
          ./mvnw clean package -DskipTests
          echo "Build completed ✅"

  docker-build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Docker Build
        run: |
          if [ "${{ inputs.build_docker }}" == "true" ]; then
            echo "Building Docker image for commitbooking..."
            docker build -t commitbooking:${{ inputs.image_tag }} .
          else
            echo "Using fallback nginx image..."
            docker build -t nginx:${{ inputs.image_tag }} .
          fi

  codeql-analysis:
    if: ${{ inputs.codeql == 'true' }}
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: java

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3

  deploy:
    if: ${{ inputs.deploy == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install KinD
        run: |
          curl -Lo ./kind https://kind.sigs.k8s.io/dl/v0.20.0/kind-linux-amd64
          chmod +x ./kind
          sudo mv ./kind /usr/local/bin/kind

      - name: Create KinD Cluster
        run: kind create cluster --name ci-cd-cluster

      - name: Install Helm
        run: |
          curl https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash

      - name: Replace Helm Values
        run: |
          cp values.json demo/values.yaml
          echo "Replaced demo/values.yaml ✅"

      - name: Deploy with Helm
        run: |
          helm upgrade --install commitbooking ./demo \
            --namespace default \
            --create-namespace \
            --set image.tag=${{ inputs.image_tag }}
