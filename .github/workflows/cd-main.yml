name: Spring Boot CI/CD with kind and ngrok

on:
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Build with Maven
      run: mvn clean package -DskipTests

    - name: Install kind
      run: |
        curl -Lo ./kind https://kind.sigs.k8s.io/dl/v0.22.0/kind-linux-amd64
        chmod +x ./kind
        sudo mv ./kind /usr/local/bin/kind

    - name: Create kind cluster
      run: kind create cluster --wait 60s

    - name: Install kubectl
      run: |
        curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
        chmod +x kubectl
        sudo mv kubectl /usr/local/bin/

    - name: Build Docker image
      run: | 
        docker build -t springboot-app:local .
        echo "Display images"
        docker images  
    - name: Load Docker image into kind
      run: kind load docker-image springboot-app:local

    # - name: Deploy App and Ingress
    #   run: |
    #     kubectl apply -f K8s/deployment.yaml
    #     kubectl apply -f K8s/service.yaml

    - name: Deploy with Helm to KinD
      run: |
        helm upgrade --install springboot ./helm/springboot-app
        kubectl rollout status deployment/springboot
        kubectl get svc


    # - name: Create Helm Chart
    #   run: |
    #     mkdir -p helm
    #     cd helm
    #     helm create demo
    # - name: Package Helm Chart
    #   run: |
    #     cd helm
    #     helm package demo
    #     ls -lh demo-*.tgz

    # - name: Upload Helm Chart as Artifact
    #   uses: actions/upload-artifact@v4
    #   with:
    #     name: helm-chart
    #     path: helm/demo-*.tgz













# name: run reusable workflow
# on:
#     workflow_call:
#         inputs:
#             environment:
#                 required: true
#                 type: string
#                 default: test
#             deployment:
#                 required: true
#                 type: string
#             build_code:
#                 required: true
#                 type: string
                
# jobs:

#  print_input:
#     name: print inputvalues
#     runs-on: ubuntu-latest
#     steps:
#         - name: input-values
#           shell: 'bash'
#           id: get-input
#           run: |
#             echo "environment   =${{inputs.environment}}"      
#             echo "Deployment   =${{inputs.deployment}}"   
#             echo "Build_code   =${{inputs.build_code}}"               
 
#  run-shell-command:
#     name: Run shell command
#     runs-on: ubuntu-latest
#     steps:
#        - name: Echo a string
#          run: echo "Hello this is a first job"
#        - name: Run a pipeleine
#          run: echo "This iakanvsdvmsdlkvm s"
