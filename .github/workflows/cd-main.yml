name: CD Main Workflow

on:
  workflow_call:
    inputs:
      build_code:
        type: boolean
        default: true
      build_docker:
        type: boolean
        default: true
      codeql:
        type: boolean
        default: false
      deploy:
        type: boolean
        default: false
      image_tag:
        type: string
        required: true
      image_name:
        type: string
        default: commitbooking
      fallback_image:
        type: string
        default: nginx   # ðŸ‘ˆ used if build_docker=false
      helm_chart_path:
        type: string
        default: ./demo  # ðŸ‘ˆ your helm folder
      helm_release_name:
        type: string
        default: demo

jobs:
  ci-cd:
    runs-on: ubuntu-latest
    permissions:
      actions: read
      security-events: write
      contents: read

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup JDK 17
        if: ${{ inputs.build_code }}
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17

      - name: Build Code
        if: ${{ inputs.build_code }}
        run: |
          echo "Building Java application..."
          ./mvnw clean package -DskipTests
          echo "Build completed âœ…"

      - name: Docker Build
        if: ${{ inputs.build_docker }}
        run: |
          IMAGE="${{ inputs.image_name }}:${{ inputs.image_tag }}"
          echo "Building Docker image: $IMAGE"
          docker build -t $IMAGE .
          echo "FINAL_IMAGE=$IMAGE" >> $GITHUB_ENV

      - name: Use Fallback Image
        if: ${{ !inputs.build_docker }}
        run: |
          IMAGE="${{ inputs.fallback_image }}:${{ inputs.image_tag }}"
          echo "Using fallback image: $IMAGE"
          echo "FINAL_IMAGE=$IMAGE" >> $GITHUB_ENV

      - name: Initialize CodeQL
        if: ${{ inputs.codeql }}
        uses: github/codeql-action/init@v3
        with:
          languages: java

      - name: Perform CodeQL Analysis
        if: ${{ inputs.codeql }}
        uses: github/codeql-action/analyze@v3

      - name: Deploy with Helm
        if: ${{ inputs.deploy }}
        run: |
          echo "Deploying Helm release: ${{ inputs.helm_release_name }}"
          echo "Using image: $FINAL_IMAGE"
          helm upgrade --install ${{ inputs.helm_release_name }} \
            ${{ inputs.helm_chart_path }} \
            --set image.repository=$(echo $FINAL_IMAGE | cut -d: -f1) \
            --set image.tag=$(echo $FINAL_IMAGE | cut -d: -f2)
